@using Microsoft.AspNetCore.Components.Web
@namespace CoursWork.Drive.Client.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="CoursWork.Drive.Client.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="Server" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        function showRenameWindow(fileName, extension) {
            document.getElementById("rename-div").style.display = 'block';
            document.getElementById("fileName").value = fileName;
            document.getElementById("basic-addon2").textContent = extension;
        }

        window.downloadFileFromStream = async (fileName, contentStreamReference) => {
            const arrayBuffer = await contentStreamReference.arrayBuffer();
            const blob = new Blob([arrayBuffer]);
            const url = URL.createObjectURL(blob);
            const anchorElement = document.createElement('a');
            anchorElement.href = url;
            anchorElement.download = fileName ?? '';
            anchorElement.click();
            anchorElement.remove();
            URL.revokeObjectURL(url);
        }

        function handleOnClick(divId) {
            document.getElementById(divId).style.display = 'block';
        }

        function handleOnClose(divId) {
            document.getElementById(divId).style.display = 'none';
        }

        function getElementValue(id) {
            return document.getElementById(id).value;
        }

        function getElementValueSpan(id) {
            return document.getElementById(id).textContent;
        }
    </script>
</body>
</html>
